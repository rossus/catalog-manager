/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.rossus.catalogmanager.client.api;

import com.rossus.catalogmanager.client.model.AddCategoryRequest;
import com.rossus.catalogmanager.client.model.EditCategoryRequest;
import com.rossus.catalogmanager.client.model.GetCategoryResponse;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2020-06-09T19:30:30.590+03:00")

@Api(value = "categories", description = "the categories API")
public interface CategoriesApi {

    @ApiOperation(value = "Add new category", notes = "", response = Void.class, tags={ "categories", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Bad Request", response = Void.class) })
    
    @RequestMapping(value = "/categories",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> addCategory(@ApiParam(value = "Name of the new category and the name of parent category (optional)" ,required=true )  @Valid @RequestBody AddCategoryRequest body);


    @ApiOperation(value = "Edit the category", notes = "", response = Void.class, tags={ "categories", })
    @ApiResponses(value = { 
        @ApiResponse(code = 400, message = "Bad Request", response = Void.class),
        @ApiResponse(code = 404, message = "Not Found", response = Void.class) })
    
    @RequestMapping(value = "/categories/{category}",
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> editCategory(@ApiParam(value = "Name of the category to edit",required=true ) @PathVariable("category") String category,@ApiParam(value = "Category parameters to edit" ,required=true )  @Valid @RequestBody EditCategoryRequest body);


    @ApiOperation(value = "Get all categories and products", notes = "", response = GetCategoryResponse.class, responseContainer = "List", tags={ "categories", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "All categories with subcategories and product infoes", response = GetCategoryResponse.class, responseContainer = "List") })
    
    @RequestMapping(value = "/categories",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<GetCategoryResponse>> getAllCategories();


    @ApiOperation(value = "Get category info", notes = "", response = GetCategoryResponse.class, tags={ "categories", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "All categories with subcategories and product infoes", response = GetCategoryResponse.class),
        @ApiResponse(code = 404, message = "Not Found", response = Void.class) })
    
    @RequestMapping(value = "/categories/{category}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<GetCategoryResponse> getCategory(@ApiParam(value = "Name of the category to return",required=true ) @PathVariable("category") String category);


    @ApiOperation(value = "Remove the category", notes = "", response = Void.class, tags={ "categories", })
    @ApiResponses(value = { 
        @ApiResponse(code = 204, message = "No Content", response = Void.class) })
    
    @RequestMapping(value = "/categories/{category}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> removeCategory(@ApiParam(value = "Name of the category to remove",required=true ) @PathVariable("category") String category,@ApiParam(value = "Remove contents of the category", defaultValue = "true") @RequestParam(value = "contents", required = false, defaultValue="true") Boolean contents);

}
